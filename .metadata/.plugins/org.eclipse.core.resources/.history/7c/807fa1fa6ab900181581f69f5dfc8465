package com.ddm.salonmanager.api.model;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import com.fasterxml.jackson.annotation.JsonIgnore;



@Entity
@Table(name="pessoa")
@Inheritance(strategy = InheritanceType.JOINED)
public class Pessoa {
	
	@Id
	@Column(name="cd_Pessoa")
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long cd_Pessoa;
	
	@NotNull
	@Size (min = 3, max = 50)
	private String nm_Pessoa;
	
	private String email;
	
	private String ds_Senha;
	
	@Enumerated(EnumType.STRING)
	protected TipoPessoa tipo;
	
	@Embedded
	protected Endereco endereco;
	
	@NotNull
	private boolean ativo;
	//ao buscar pessoa, buscará também as suas permissões
	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "pessoa_permissao", joinColumns = @JoinColumn(name = "codigo_pessoa")
		,inverseJoinColumns = @JoinColumn(name = "codigo_permissao"))
	private List<Permissao> permissoes;
	
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
	

	public long getCd_Pessoa() {
		return cd_Pessoa;
	}

	public void setCd_Pessoa(long cd_Pessoa) {
		this.cd_Pessoa = cd_Pessoa;
	}

	public String getNm_Pessoa() {
		return nm_Pessoa;
	}

	public void setNm_Pessoa(String nm_Pessoa) {
		this.nm_Pessoa = nm_Pessoa;
	}


	public String getDs_Senha() {
		return ds_Senha;
	}

	public void setDs_Senha(String ds_Senha) {
		this.ds_Senha = ds_Senha;
	}

	public Endereco getEndereco() {
		return endereco;
	}

	public void setEndereco(Endereco endereco) {
		this.endereco = endereco;
	}

	public boolean isAtivo() {
		return ativo;
	}

	public void setAtivo(boolean ativo) {
		this.ativo = ativo;
	}
	
	@JsonIgnore //faz com que o jackson não mande como propriedade o is...
	@Transient //ignora pelo hibernate para nao serializar ou mandar para o banco de dados
	public boolean isInativo() {
		return !this.ativo;

	}
	
	public TipoPessoa getTipo() {
		return tipo;
	}
	
	public void setTipo(TipoPessoa tipo) {
		this.tipo = tipo;
	}
	
	public List<Permissao> getPermissoes() {
		return permissoes;
	}

	public void setPermissoes(List<Permissao> permissoes) {
		this.permissoes = permissoes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (cd_Pessoa ^ (cd_Pessoa >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pessoa other = (Pessoa) obj;
		if (cd_Pessoa != other.cd_Pessoa)
			return false;
		return true;
	}

}
